# Création des widgets spécifiques


<SignIn@BoxLayout>:
    Button:
        text: "provisoire - Sign in"
        on_press: app.ButtonSound()

<LogIn@BoxLayout>:
    Button:
        text: "provisoire - Log in"
        on_press: app.ButtonSound()


<JoinGame>:
    Label:
        pos_hint: {'x':.3,'y':.5}
        size_hint: .2, .05
        text: "Game id:"
    TextInput:
        pos_hint: {'x':.5,'y':.5}
        size_hint: .2, .05
        id: gameid
    Button:
        pos_hint: {'x':.45,'y':.35}
        size_hint: .1, .1
        text: "Join"
        on_press: app.ButtonSound(), root.join()

<CreateGame@Label>:
    text: "Not done yet"


<Rules@BoxLayout>:
    orientation: "vertical"
    Label:
        bold: True
        text: "Rules of the Kart Simulator"
        font_size: 32
        color: .8,.4,.2,1
        size_hint: 1,.1
        canvas.before:
            Color:
                rgba: 0, 0, 0, 1
            Rectangle:
                pos: self.pos
                size: self.size
    Label:
        italic: True
        text: " - Le but est de compléter le nombre de tours requis le plus rapidement possible\n\n - Les karts perdent de la vitesse lorsqu'ils touchent le bord de la piste ou des obstacles quelconques\n\n - La partie est perdue si le joueur sort de la piste (par un bout sans barrières)"
        font_size: 16
        color: 0,0,0,1
        size_hint: 1,.9
        canvas.before:
            Color:
                rgba: .8,.4,.2,1
            Rectangle:
                pos: self.pos
                size: self.size



<Controls>:
    TextInput:
        pos_hint: {'center_x':.55,'center_y':.38}
        size_hint: .015, .015
        width: "100dp"
        text: ""
        multiline: False
        on_text_validate: root.on_text_validate(self)

    Label:
        bold: True
        text: "Controls of the Kart Simulator"
        pos_hint: {'x':0,'y':.9}
        font_size: 32
        color: .8,.4,.2,1
        size_hint: 1,.1
        canvas.before:
            Color:
                rgba: 0, 0, 0, 1
            Rectangle:
                pos: self.pos
                size: self.size

    Label:
        italic: True
        text: ' - Avancer/Accélérer: W / up\n\n - Reculer/Ralentir: S / down\n\n - Tourner à gauche: A / left\n\n - Tourner à droite: D / right\n\n - Pause/Reprendre: Esc'
        font_size: 16
        color: 0,0,0,1
        size_hint: 1,.9
        canvas.before:
            Color:
                rgba: .8,.4,.2,1
            Rectangle:
                pos: self.pos
                size: self.size





<UpdateWorlds>:
    TextInput:
        pos_hint: {'center_x':.5,'center_y':.5}
        size_hint: .25, .25
        text: ""
        multiline: False
        on_text_validate: root.on_text_validate(self)

    ######################## A décommenter en cas d'extrême désolation dans la recherche de l'easter Egg ########################
    # Button:
    #     pos_hint: {'center_x':.5,'center_y':.1}
    #     size_hint: .15,.15
    #     text:"EasterEgg"
    #     on_press: app.manager.pop(), app.instanciate_ks(world="client/easteregg.json", music = "No music")
    #############################################################################################################################
    
    Label:
        pos_hint: {'center_x':.5,'center_y':.95}
        bold: True
        text: "Update the worlds"
        font_size: 32
        color: .8,.4,.2,1
        size_hint: 1,.1
        canvas.before:
            Color:
                rgba: 0, 0, 0, 1
            Rectangle:
                pos: self.pos
                size: self.size

    UpdateWorldButton:
        pos_hint: {'center_x':.5,'center_y':.8}
        size_hint: 1, .2
        text: "Update the worlds now"
        on_press:
            self.generateUpdatedWorldsList(updateWorlds_output_id, app.manager.get_screen("MainMenu").children[0].ids.worlds_spinner_id),
            app.ButtonSound()

    Label:
        id: updateWorlds_output_id
        pos_hint: {'x':0,'y':0}
        text: ""
        font_size: 16
        color: 1,1,1,1
        size_hint: 1,.7
        canvas.before:
            Color:
                rgba: 0,0,0,1
            Rectangle:
                pos: self.pos
                size: self.size


<PauseMode>:
    Button:
        size_hint:.2,.1
        pos_hint: {'x': .4 , 'y': .5 }
        text:"Resume"
        on_release: app.game_instance.resumeGame(root.chosen_music), app.ButtonSound()
    
    Button:
        size_hint:.2,.1
        pos_hint: {'x': .4 , 'y': .4 }
        text:"Quit game"
        on_release: app.manager.pop(),app.clear_game(), app.ButtonSound()

    Spinner:
        id: music_spinner_id
        pos_hint: {'x':.8,'y':.6}
        size_hint: .2, .1
        text: root.chosen_music
        values: root.generateMusicsList()
        on_text:
            root.changeMusicSpinnerText(music_spinner_id.text), app.ButtonSound(), app.game_instance.changeMusic(root.chosen_music)


<EndGameMode>:
    canvas.before:
        Color:
            rgba: 0,0,0,.5
        Rectangle:
            pos: self.pos
            size: self.size

    Label:
        id: gameOverLabel_id
        text: ""
        font_size: 74
        halign: 'center'
        color: 0.4, 1, 0.4, 1

    Button:
        size_hint:.2,.1
        pos_hint: {'x':.4, 'y': .45}
        text:"Quit game"
        on_release: app.manager.pop(),app.clear_game(), app.ButtonSound()